version=54;
class EditorData
{
	moveGridStep=64;
	angleGridStep=0.2617994;
	scaleGridStep=1;
	autoGroupingDist=10;
	toggles=513;
	mods[]=
	{
		"3denEnhanced"
	};
	class ItemIDProvider
	{
		nextID=20;
	};
	class Camera
	{
		pos[]={14634.206,23.708145,16723.656};
		dir[]={0.94175255,-0.21716093,0.25680384};
		up[]={0.20951226,0.97613591,0.057131208};
		aside[]={0.26308203,-8.8883098e-008,-0.96477669};
	};
};
binarizationWanted=0;
sourceName="free_fall_demo";
addons[]=
{
	"A3_Characters_F",
	"USAF_C130J_C",
	"A3_Modules_F_Curator_Curator"
};
class AddonsMetaData
{
	class List
	{
		items=3;
		class Item0
		{
			className="A3_Characters_F";
			name="Arma 3 Alpha - Characters and Clothing";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item1
		{
			className="USAF_C130J_C";
			name="USAF_C130J_C";
			author="USAF Mod Team";
		};
		class Item2
		{
			className="A3_Modules_F_Curator";
			name="Arma 3 Zeus Update - Scripted Modules";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
	};
};
randomSeed=9165210;
class ScenarioData
{
	author="Ampersand";
};
class CustomAttributes
{
	class Category0
	{
		name="Scenario";
		class Attribute0
		{
			property="ENH_AddObjectsToZeus";
			expression="    if (!is3DEN && isServer && _value && !(allCurators isEqualTo [])) then    {      [] spawn      {        scriptName 'ENH_Attribute_AddObjectsToZeus';        while {true} do        {          {          _x addCuratorEditableObjects            [              entities [[], ['Logic'], true],              true            ];          } count allCurators;          sleep 60;        };      };    }";
			class Value
			{
				class data
				{
					singleType="BOOL";
					value=1;
				};
			};
		};
		class Attribute1
		{
			property="ENH_SPR";
			expression="if (!is3DEN && _value # 0 > 0 && !isMultiplayer) then      {        ENH_SPR_Ruleset = _value param [0, 0];        ENH_SPR_Delay = _value param [1, 20];        ENH_SPR_CanDie = _value param [2, false];        ENH_SPR_RestoreLoadout = _value param [3, false];        ENH_SPR_OnRespawnCode = compile (_value param [4, '']);        ENH_SPR_Positions =        [          allMapMarkers select {'respawn_east' in toLower _x} apply {getMarkerPos _x},          allMapMarkers select {'respawn_west' in toLower _x} apply {getMarkerPos _x},          allMapMarkers select {'respawn_guerilla' in toLower _x} apply {getMarkerPos _x},          allMapMarkers select {'respawn_civilian' in toLower _x} apply {getMarkerPos _x}        ];        {          _x setVariable ['ENH_SPR_OriginalSide', side group _x];          _x setVariable ['ENH_SPR_OriginalLoadout', getUnitLoadout _x];          _x addEventHandler ['handleDamage',          {            params ['_unit', '', '_damage', '', '', '_index'];            if (!alive _unit || lifeState _unit isEqualTo 'INCAPACITATED') exitWith {0};            if (_unit getVariable ['ENH_SPR_Tickets', 0] == 0) then            {              _unit removeEventHandler ['handleDamage', _thisEventHandler];              _damage;            };            if (ENH_SPR_CanDie && _index in [1, 2] && _damage >= 1) exitWith            {              _unit removeEventHandler ['handleDamage', _thisEventHandler];              1;            };            if (_index < 8 && (_damage min 0.95) == 0.95) then            {              setAccTime 1;              _unit allowDamage false;              _unit setCaptive true;              _unit setUnconscious true;              _unit setVariable ['ENH_SPR_Tickets', (_unit getVariable ['ENH_SPR_Tickets', 0]) - 1];              if (isPlayer _unit) then {enableTeamSwitch false} else {removeSwitchableUnit _unit};              moveOut _unit;              _unit spawn ENH_fnc_SPR_respawnTimer;            };            _damage min 0.95;          }];        } forEach (allUnits select {_x getVariable ['ENH_SPR_Tickets', 0] > 0});                ENH_fnc_SPR_respawn =        {          scriptName 'ENH_Attribute_SPR_Respawn';          params ['_unit'];          if (isPlayer _unit) then {enableTeamSwitch true} else {addSwitchableUnit _unit};          if (ENH_SPR_RestoreLoadout) then {_unit setUnitLoadout (_unit getVariable 'ENH_SPR_OriginalLoadout')};          private _sideID = (_unit getVariable 'ENH_SPR_OriginalSide') call BIS_fnc_sideID;          private _positions = ENH_SPR_Positions select _sideID;          if (_positions isNotEqualTo []) then          {            switch (ENH_SPR_Ruleset) do            {              case 3:              {                _unit setPos (([_positions, [], {_unit distance _x}, 'ASCEND'] call BIS_fnc_sortBy) select 0);              };              case 2:              {                _unit setPos selectRandom _positions;              };            };          };          _unit setUnconscious false;          _unit allowDamage true;          _unit setDamage 0;          _unit switchMove '';          _unit call ENH_SPR_OnRespawnCode;          _unit spawn          {            sleep 8;            _this setCaptive false;          };        };                ENH_fnc_SPR_respawnTimer =        {          scriptName 'ENH_Attribute_SPR_RespawnTimer';          params ['_unit'];          private _respawnTime = time + ENH_SPR_Delay;          if (isPlayer _unit) then          {            private _ctrlRespawnTimer = (call BIS_fnc_displayMission) ctrlCreate ['RscStructuredText',-1];            _ctrlRespawnTimer ctrlSetPosition [0.25, 0, 0.5, 0.06];            _ctrlRespawnTimer ctrlSetBackgroundColor [0, 0, 0, 0.1];            _ctrlRespawnTimer ctrlCommit 0;            ENH_SPR_OriginalVolume = [soundVolume, musicVolume, radioVolume, speechVolume, environmentVolume];            0 cutText ['', 'BLACK OUT', 0.3];            0.3 fadeSound 0;            0.3 fadeMusic 0;            0.3 fadeRadio 0;            0.3 fadeSpeech 0;            0.3 fadeEnvironment 0;            showChat false;            while {time < _respawnTime} do            {              _ctrlRespawnTimer ctrlSetStructuredText parseText format ['<t size=''1.25'' color=''#218a36'' align=''center''>%1</t>', [(_respawnTime - time), 'HH:MM'] call BIS_fnc_timeToString];              sleep 0.1;            };            ctrlDelete _ctrlRespawnTimer;            0 cutText ['', 'BLACK IN', 8];            8 fadeSound (ENH_SPR_OriginalVolume # 0);            8 fadeMusic (ENH_SPR_OriginalVolume # 1);            8 fadeRadio (ENH_SPR_OriginalVolume # 2);            8 fadeSpeech (ENH_SPR_OriginalVolume # 3);            8 fadeEnvironment (ENH_SPR_OriginalVolume # 4);            showChat true;            [              ['Respawned'],              [format ['GRID: %1', mapGridPosition _unit]],              [format ['Tickets left: %1', _unit getVariable 'ENH_SPR_Tickets']]            ] spawn BIS_fnc_EXP_camp_SITREP;          }          else          {            if ((side player getFriend (_unit getVariable 'ENH_SPR_OriginalSide')) >= 0.6) then            {              [                str _unit, 'onEachFrame',                {                  drawIcon3D ['\a3\Modules_f\data\portraitRespawn_ca.paa', [0.13, 0.54, 0.21, 0.8], ASLToAGL ((_this # 0) modelToWorldVisualWorld [0, 0, 1]), 1, 1, 0, str round ((_this # 1) - time), 2];                },                [_unit, _respawnTime]              ] call BIS_fnc_addStackedEventHandler;            };            sleep ENH_SPR_Delay;          };          [str _unit, 'onEachFrame'] call BIS_fnc_removeStackedEventHandler;          _unit call ENH_fnc_SPR_respawn;        };      }";
			class Value
			{
				class data
				{
					singleType="ARRAY";
					class value
					{
						items=5;
						class Item0
						{
							class data
							{
								singleType="SCALAR";
								value=0;
							};
						};
						class Item1
						{
							class data
							{
								singleType="SCALAR";
								value=20;
							};
						};
						class Item2
						{
							class data
							{
								singleType="BOOL";
								value=0;
							};
						};
						class Item3
						{
							class data
							{
								singleType="BOOL";
								value=0;
							};
						};
						class Item4
						{
							class data
							{
								singleType="STRING";
								value="";
							};
						};
					};
				};
			};
		};
		nAttributes=2;
	};
};
class Mission
{
	class Intel
	{
		timeOfChanges=1800.0002;
		startWeather=0.30000001;
		startWind=0.1;
		startWaves=0.1;
		forecastWeather=0.30000001;
		forecastWind=0.1;
		forecastWaves=0.1;
		forecastLightnings=0.1;
		year=2035;
		month=6;
		day=24;
		hour=22;
		minute=0;
		startFogDecay=0.014;
		forecastFogDecay=0.014;
		class CustomAttributes
		{
			name="Intel";
			class Attribute0
			{
				property="ENH_terrainDetail";
				expression="if (!is3DEN && _value > 0 && hasInterface) then {setTerrainGrid _value}";
				class Value
				{
					class data
					{
						singleType="SCALAR";
						value=0;
					};
				};
			};
			nAttributes=1;
		};
	};
	class Entities
	{
		items=4;
		class Item0
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=5;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={14659.077,17.911438,16726.027};
					};
					side="West";
					flags=7;
					class Attributes
					{
						isPlayer=1;
					};
					id=1;
					type="B_soldier_PG_F";
				};
				class Item1
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={14659.077,17.911438,16726.027};
					};
					side="West";
					flags=5;
					class Attributes
					{
					};
					id=2;
					type="B_soldier_PG_F";
				};
				class Item2
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={14659.077,17.911438,16726.027};
					};
					side="West";
					flags=5;
					class Attributes
					{
					};
					id=3;
					type="B_soldier_PG_F";
				};
				class Item3
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={14659.077,17.911438,16726.027};
					};
					side="West";
					flags=5;
					class Attributes
					{
					};
					id=4;
					type="B_soldier_PG_F";
				};
				class Item4
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={14659.077,17.911438,16726.027};
					};
					side="West";
					flags=5;
					class Attributes
					{
					};
					id=5;
					type="B_soldier_PG_F";
				};
			};
			class Attributes
			{
			};
			class CrewLinks
			{
				class LinkIDProvider
				{
					nextID=5;
				};
				class Links
				{
					items=5;
					class Item0
					{
						linkID=0;
						item0=1;
						item1=12;
						class CustomData
						{
							role=3;
							cargoIndex=0;
						};
					};
					class Item1
					{
						linkID=1;
						item0=2;
						item1=12;
						class CustomData
						{
							role=3;
							cargoIndex=1;
						};
					};
					class Item2
					{
						linkID=2;
						item0=3;
						item1=12;
						class CustomData
						{
							role=3;
							cargoIndex=2;
						};
					};
					class Item3
					{
						linkID=3;
						item0=4;
						item1=12;
						class CustomData
						{
							role=3;
							cargoIndex=3;
						};
					};
					class Item4
					{
						linkID=4;
						item0=5;
						item1=12;
						class CustomData
						{
							role=3;
							cargoIndex=4;
						};
					};
				};
			};
			id=0;
		};
		class Item1
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=4;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={14659.077,17.911438,16726.027};
						angles[]={0,0.76860803,0};
					};
					side="West";
					flags=6;
					class Attributes
					{
					};
					id=13;
					type="B_Pilot_F";
				};
				class Item1
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={14659.077,17.925961,16725.934};
						angles[]={0,0.76860803,0};
					};
					side="West";
					flags=4;
					class Attributes
					{
					};
					id=14;
					type="B_Pilot_F";
					atlOffset=0.014522552;
				};
				class Item2
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={14659.077,17.911438,16726.027};
						angles[]={-0,0.76860803,0};
					};
					side="West";
					flags=4;
					class Attributes
					{
					};
					id=16;
					type="B_Pilot_F";
				};
				class Item3
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={14659.077,17.911438,16726.027};
						angles[]={-0,0.76860803,0};
					};
					side="West";
					flags=4;
					class Attributes
					{
					};
					id=18;
					type="B_Pilot_F";
				};
			};
			class Attributes
			{
			};
			class CrewLinks
			{
				class LinkIDProvider
				{
					nextID=4;
				};
				class Links
				{
					items=4;
					class Item0
					{
						linkID=0;
						item0=13;
						item1=12;
						class CustomData
						{
							role=1;
						};
					};
					class Item1
					{
						linkID=1;
						item0=14;
						item1=12;
						class CustomData
						{
							role=2;
							turretPath[]={0};
						};
					};
					class Item2
					{
						linkID=2;
						item0=16;
						item1=12;
						class CustomData
						{
							role=2;
							turretPath[]={1};
						};
					};
					class Item3
					{
						linkID=3;
						item0=18;
						item1=12;
						class CustomData
						{
							role=2;
							turretPath[]={2};
						};
					};
				};
			};
			id=6;
		};
		class Item2
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={14659.077,17.924522,16725.883};
				angles[]={0,0.76860803,0};
			};
			side="West";
			flags=6;
			class Attributes
			{
				reportRemoteTargets=1;
				receiveRemoteTargets=1;
				reportOwnPosition=1;
			};
			id=12;
			type="USAF_C130J";
		};
		class Item3
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={14658.033,17.91,16701.205};
			};
			id=19;
			type="ModuleCurator_F";
			class CustomAttributes
			{
				class Attribute0
				{
					property="ModuleCurator_F_Owner";
					expression="_this setVariable ['Owner',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="";
						};
					};
				};
				class Attribute1
				{
					property="ModuleCurator_F_Forced";
					expression="_this setVariable ['Forced',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute2
				{
					property="ModuleCurator_F_Name";
					expression="_this setVariable ['Name',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="";
						};
					};
				};
				class Attribute3
				{
					property="ModuleCurator_F_Addons";
					expression="_this setVariable ['Addons',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=3;
						};
					};
				};
				nAttributes=4;
			};
		};
	};
};
